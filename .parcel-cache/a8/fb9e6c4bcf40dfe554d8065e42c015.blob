var helpers = require("../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require("react-dom");
  require('react-piano');
  require('react-piano/dist/styles.css');
  var _jsxFileName = "/home/philip/GitHub/imitation-lab/funcReact.js", _s = $RefreshSig$();
  const handleChange = (setCount, amt) => setTimeout(() => setCount(currentCount => currentCount + amt), 0);
  const App = () => {
    _s();
    const [count, setCount] = _react.useState(2);
    const options = ['trapets'];
    const body = [{
      "id": "02089245289",
      "name": "Mary",
      "ItemNumber": ""
    }];
    const doFetch = async body => {
      const rawResponse = await fetch('https://phhu.org/trapets/stream', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body
      });
      return await rawResponse.json();
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 36,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("select", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 7
        }
      }, options.map(x => /*#__PURE__*/_reactDefault.default.createElement("option", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 38,
          columnNumber: 25
        }
      }, x))), /*#__PURE__*/_reactDefault.default.createElement("br", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40,
          columnNumber: 7
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("textarea", {
        id: "body",
        cols: "60",
        rows: "6",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 41,
          columnNumber: 7
        }
      }, JSON.stringify(body, null, 2)), /*#__PURE__*/_reactDefault.default.createElement("br", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 7
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(Button, {
        handleClick: async () => {
          document.getElementById('res').innerText = '';
          document.getElementById('res').innerText = JSON.stringify(await doFetch(document.getElementById('body').value), null, 2);
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 7
        }
      }, "Send"), /*#__PURE__*/_reactDefault.default.createElement("hr", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 7
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("pre", {
        id: "res",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 7
        }
      }))
    );
  };
  _s(App, "ZJ1DUDXQCjl8cZXJHS7tpc98pV8=");
  _c = App;
  const Button = ({handleClick, children}) => /*#__PURE__*/_reactDefault.default.createElement("button", {
    type: "button",
    onClick: handleClick,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 3
    }
  }, children);
  _c2 = Button;
  exports.default = App;
  var _c, _c2;
  $RefreshReg$(_c, "App");
  $RefreshReg$(_c2, "Button");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
